#ifndef zigbee_h 
#define zigbee_h 1

#include "struct.h"

#define OpenRF_power()    GPIOD->ODR|=GPIO_Pin_0		//PD_ODR_ODR0=1
#define CloseRF_power()   GPIOD->ODR&=(~GPIO_Pin_0)		//PD_ODR_ODR0=0

#define ENABLE_RF_IRQ_INT()  GPIOD->CR2|=0x10;		//PD_CR2_C24 = 1
#define DISABLE_RF_IRQ_INT() GPIOD->CR2&=0xef		//PD_CR2_C24 = 0

#define LS_CHANNEL_OFFSET           2

#define  SETB_set    GPIOD->ODR|=GPIO_Pin_5            //SETB_rst() (PD_ODR_ODR5)
#define  SETB_clr    GPIOD->ODR&=(~GPIO_Pin_5)           //SETB_rst() (PD_ODR_ODR5)


/* const unsigned char Data_PNCODE_table[4][16] =
{
   {0x83,0xF7,0xA8,0x2D,0x7A,0x44,0x64,0xD3,
   0x3F,0x2C,0x4E,0xAA,0x71,0x48,0x7A,0xC9,},

   {0x17,0xFF,0x9E,0x21,0x36,0x90,0xC7,0x82,
   0xA6,0x46,0xB5,0x9A,0x3A,0x30,0xB6,0xAD,},

   {0xBC,0x5D,0x9A,0x5B,0xEE,0x7F,0x42,0xEB,
   0x24,0xF5,0xDD,0xF8,0x7A,0x77,0x74,0xE7,},

   {0x3D,0x70,0x7C,0x94,0xDC,0x84,0xAD,0x95,
   0x1E,0x6A,0xF0,0x37,0x52,0x7B,0x11,0xD4,},

};*/

 /*const unsigned char  SOP_PNCODE_table[12][8] =
{
    {0xB7, 0x8F, 0x2B, 0x01, 0xEF, 0x76, 0x0D, 0x01,},     // PN Code 0  
    {0x82, 0xC7, 0x90, 0x36, 0x21, 0x9e, 0xFF, 0x17,},     // PN Code 1 default
    {0xE3, 0x5C, 0xFA, 0x02, 0x97, 0x93, 0xF9, 0x02,},     // PN Code 2
    {0xCB, 0x52, 0x77, 0x03, 0x1A, 0xBF, 0x74, 0x03,},     // PN Code 3
    {0xBF, 0x6B, 0x90, 0x06, 0xF3, 0x8E, 0x8D, 0x06,},     // PN Code 4
    {0x4F, 0x17, 0xEC, 0x09, 0xAD, 0xA4, 0xEB, 0x09,},     // PN Code 5
    {0xAD, 0x39, 0xA2, 0x0F, 0x9B, 0xC5, 0xA1, 0x0F,},     // PN Code 6
    {0x3A, 0x6F, 0x89, 0x1C, 0xDF, 0xD4, 0x88, 0x1C,},     // PN Code 7
    {0xD2, 0x8F, 0xB1, 0x2A, 0xEF, 0x64, 0xB0, 0x2A,},     // PN Code 8
    {0x66, 0xCD, 0x7C, 0x50, 0xDD, 0x26, 0x7C, 0x50,},     // PN Code 9
    {0xE2, 0xF8, 0xCC, 0x91, 0x3C, 0x37, 0xCC, 0x91,},     // PN Code 10
    {0xB2, 0x3D, 0x0D, 0xA5, 0xDF, 0x83, 0x0C, 0xA5,},     // PN Code 11
};
 const unsigned char PREAM_pn_code_table[12][3] = 
{
    {0x02, 0xF7, 0x02},
	{0x02, 0x7A, 0x02},
	{0x02, 0xD3, 0x3F},
	{0x02, 0x4E, 0xAA}, 
	{0x02, 0x48, 0x7A},
	{0x02, 0x17, 0xFF},
	{0x02, 0x21, 0x36},
	{0x02, 0xC7, 0x82},
    {0x02, 0x46, 0xB5},
	{0x02, 0x3A, 0x30},
	{0x02, 0xAD, 0xBC},
	{0x02, 0x9A, 0x5B},
	//{0x02, 0x33, 0x33},
	//{0x02, 0x24, 0xF5},

};*/

unsigned char Getchannel_timer(Pcontroler_Symple TagCng);
void outOfSleep(void);
void reg_rregister(unsigned char r_addr,unsigned char r_data);
void mov_data(unsigned char *source,unsigned char *dist,unsigned char lenth);

#define  wdt4s       15259
 


//void Pn_saved(PcontrolerConfig TagCng);
void TimerRf(void);


extern unsigned char TimerFlag;
void WakeOPERation(void);
void delayMs(long dls);

void RXDrf(void);
extern void delayMs(long dls);
void TestWriteSpi(void);

#define waitNoCkSpitms()  {nop();nop();nop();nop();nop();nop();nop();nop();nop();}
void reg_rregister(unsigned char r_addr,unsigned char r_data);
//extern unsigned int ReadWordFlash(unsigned long startaddr);
unsigned char judgeReciRFmodel(void);
void RXDIdle(void);
void SetPowerAndBitrate(PcontrolerConfig TagCng);
void test_mouulata(void);
extern unsigned short CRC_16( unsigned char *aData, unsigned char aSize ) ;
extern volatile unsigned int RecCount,SendCount,AckCount;
extern void WatchTimerSet(unsigned char temp);


void BackRfChannel(PcontrolerConfig TagCng);

void CoveryChannel(PcontrolerConfig TagCng);
extern unsigned char SpiReadByte(unsigned char cAddr);
extern void SpiWriteByte(unsigned char cAddr,unsigned char cc);
//extern unsigned int CRC_table[256];
unsigned char waitCheck_ISSI(Pcontroler_Symple TagCng,unsigned Comp);
unsigned char exint0(Pcontroler_Symple TagCng);
void check_crystal_stable(void);
void RFinoSleep(void);
unsigned char RadioSendPacket(unsigned char retry, unsigned char length ,unsigned char packageType);
#endif

